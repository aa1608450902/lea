// Generated from C:/Users/jun.dai/Documents/GitHub/lea/grammar/ScriptGrammar.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,55,392,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,1,0,1,0,1,1,
1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,
1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,
1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,
10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,
1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,
19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,
26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,
1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,
38,1,38,1,39,1,39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,42,1,43,1,43,
1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,
46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,49,1,49,1,50,4,50,295,8,50,11,50,
12,50,296,1,50,1,50,4,50,301,8,50,11,50,12,50,302,3,50,305,8,50,1,50,1,50,
1,50,4,50,310,8,50,11,50,12,50,311,1,50,1,50,1,50,4,50,317,8,50,11,50,12,
50,318,1,50,1,50,1,50,4,50,324,8,50,11,50,12,50,325,3,50,328,8,50,1,51,1,
51,5,51,332,8,51,10,51,12,51,335,9,51,1,52,1,52,1,52,1,52,5,52,341,8,52,
10,52,12,52,344,9,52,1,52,1,52,1,52,1,52,1,52,5,52,351,8,52,10,52,12,52,
354,9,52,1,52,1,52,1,52,1,52,5,52,360,8,52,10,52,12,52,363,9,52,1,52,3,52,
366,8,52,1,53,1,53,1,53,1,53,5,53,372,8,53,10,53,12,53,375,9,53,1,53,1,53,
1,53,1,53,1,53,1,54,1,54,1,54,1,54,5,54,386,8,54,10,54,12,54,389,9,54,1,
54,1,54,2,361,373,0,55,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,1,0,10,2,0,9,10,
32,32,2,0,88,88,120,120,3,0,48,57,65,70,97,102,2,0,79,79,111,111,2,0,66,
66,98,98,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,32,33,35,
127,8,0,34,34,39,39,92,92,98,98,102,102,110,110,114,114,116,116,2,0,10,10,
13,13,410,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,
0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,
0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,1,
111,1,0,0,0,3,113,1,0,0,0,5,119,1,0,0,0,7,126,1,0,0,0,9,128,1,0,0,0,11,130,
1,0,0,0,13,138,1,0,0,0,15,148,1,0,0,0,17,155,1,0,0,0,19,162,1,0,0,0,21,164,
1,0,0,0,23,168,1,0,0,0,25,170,1,0,0,0,27,172,1,0,0,0,29,174,1,0,0,0,31,177,
1,0,0,0,33,182,1,0,0,0,35,186,1,0,0,0,37,189,1,0,0,0,39,195,1,0,0,0,41,202,
1,0,0,0,43,211,1,0,0,0,45,217,1,0,0,0,47,219,1,0,0,0,49,221,1,0,0,0,51,223,
1,0,0,0,53,225,1,0,0,0,55,227,1,0,0,0,57,229,1,0,0,0,59,231,1,0,0,0,61,234,
1,0,0,0,63,237,1,0,0,0,65,239,1,0,0,0,67,241,1,0,0,0,69,244,1,0,0,0,71,247,
1,0,0,0,73,249,1,0,0,0,75,251,1,0,0,0,77,253,1,0,0,0,79,256,1,0,0,0,81,259,
1,0,0,0,83,261,1,0,0,0,85,263,1,0,0,0,87,267,1,0,0,0,89,272,1,0,0,0,91,278,
1,0,0,0,93,283,1,0,0,0,95,285,1,0,0,0,97,287,1,0,0,0,99,289,1,0,0,0,101,
327,1,0,0,0,103,329,1,0,0,0,105,365,1,0,0,0,107,367,1,0,0,0,109,381,1,0,
0,0,111,112,5,59,0,0,112,2,1,0,0,0,113,114,5,99,0,0,114,115,5,108,0,0,115,
116,5,97,0,0,116,117,5,115,0,0,117,118,5,115,0,0,118,4,1,0,0,0,119,120,5,
101,0,0,120,121,5,120,0,0,121,122,5,116,0,0,122,123,5,101,0,0,123,124,5,
110,0,0,124,125,5,100,0,0,125,6,1,0,0,0,126,127,5,123,0,0,127,8,1,0,0,0,
128,129,5,125,0,0,129,10,1,0,0,0,130,131,5,112,0,0,131,132,5,114,0,0,132,
133,5,105,0,0,133,134,5,118,0,0,134,135,5,97,0,0,135,136,5,116,0,0,136,137,
5,101,0,0,137,12,1,0,0,0,138,139,5,112,0,0,139,140,5,114,0,0,140,141,5,111,
0,0,141,142,5,116,0,0,142,143,5,101,0,0,143,144,5,99,0,0,144,145,5,116,0,
0,145,146,5,101,0,0,146,147,5,100,0,0,147,14,1,0,0,0,148,149,5,112,0,0,149,
150,5,117,0,0,150,151,5,98,0,0,151,152,5,108,0,0,152,153,5,105,0,0,153,154,
5,99,0,0,154,16,1,0,0,0,155,156,5,115,0,0,156,157,5,116,0,0,157,158,5,97,
0,0,158,159,5,116,0,0,159,160,5,105,0,0,160,161,5,99,0,0,161,18,1,0,0,0,
162,163,5,61,0,0,163,20,1,0,0,0,164,165,5,100,0,0,165,166,5,101,0,0,166,
167,5,102,0,0,167,22,1,0,0,0,168,169,5,40,0,0,169,24,1,0,0,0,170,171,5,41,
0,0,171,26,1,0,0,0,172,173,5,44,0,0,173,28,1,0,0,0,174,175,5,105,0,0,175,
176,5,102,0,0,176,30,1,0,0,0,177,178,5,101,0,0,178,179,5,108,0,0,179,180,
5,115,0,0,180,181,5,101,0,0,181,32,1,0,0,0,182,183,5,102,0,0,183,184,5,111,
0,0,184,185,5,114,0,0,185,34,1,0,0,0,186,187,5,105,0,0,187,188,5,110,0,0,
188,36,1,0,0,0,189,190,5,119,0,0,190,191,5,104,0,0,191,192,5,105,0,0,192,
193,5,108,0,0,193,194,5,101,0,0,194,38,1,0,0,0,195,196,5,114,0,0,196,197,
5,101,0,0,197,198,5,116,0,0,198,199,5,117,0,0,199,200,5,114,0,0,200,201,
5,110,0,0,201,40,1,0,0,0,202,203,5,99,0,0,203,204,5,111,0,0,204,205,5,110,
0,0,205,206,5,116,0,0,206,207,5,105,0,0,207,208,5,110,0,0,208,209,5,117,
0,0,209,210,5,101,0,0,210,42,1,0,0,0,211,212,5,98,0,0,212,213,5,114,0,0,
213,214,5,101,0,0,214,215,5,97,0,0,215,216,5,107,0,0,216,44,1,0,0,0,217,
218,5,33,0,0,218,46,1,0,0,0,219,220,5,126,0,0,220,48,1,0,0,0,221,222,5,43,
0,0,222,50,1,0,0,0,223,224,5,45,0,0,224,52,1,0,0,0,225,226,5,42,0,0,226,
54,1,0,0,0,227,228,5,47,0,0,228,56,1,0,0,0,229,230,5,37,0,0,230,58,1,0,0,
0,231,232,5,62,0,0,232,233,5,61,0,0,233,60,1,0,0,0,234,235,5,60,0,0,235,
236,5,61,0,0,236,62,1,0,0,0,237,238,5,62,0,0,238,64,1,0,0,0,239,240,5,60,
0,0,240,66,1,0,0,0,241,242,5,61,0,0,242,243,5,61,0,0,243,68,1,0,0,0,244,
245,5,33,0,0,245,246,5,61,0,0,246,70,1,0,0,0,247,248,5,38,0,0,248,72,1,0,
0,0,249,250,5,94,0,0,250,74,1,0,0,0,251,252,5,124,0,0,252,76,1,0,0,0,253,
254,5,38,0,0,254,255,5,38,0,0,255,78,1,0,0,0,256,257,5,124,0,0,257,258,5,
124,0,0,258,80,1,0,0,0,259,260,5,63,0,0,260,82,1,0,0,0,261,262,5,58,0,0,
262,84,1,0,0,0,263,264,5,110,0,0,264,265,5,101,0,0,265,266,5,119,0,0,266,
86,1,0,0,0,267,268,5,116,0,0,268,269,5,114,0,0,269,270,5,117,0,0,270,271,
5,101,0,0,271,88,1,0,0,0,272,273,5,102,0,0,273,274,5,97,0,0,274,275,5,108,
0,0,275,276,5,115,0,0,276,277,5,101,0,0,277,90,1,0,0,0,278,279,5,110,0,0,
279,280,5,117,0,0,280,281,5,108,0,0,281,282,5,108,0,0,282,92,1,0,0,0,283,
284,5,91,0,0,284,94,1,0,0,0,285,286,5,93,0,0,286,96,1,0,0,0,287,288,5,46,
0,0,288,98,1,0,0,0,289,290,7,0,0,0,290,291,1,0,0,0,291,292,6,49,0,0,292,
100,1,0,0,0,293,295,2,48,57,0,294,293,1,0,0,0,295,296,1,0,0,0,296,294,1,
0,0,0,296,297,1,0,0,0,297,304,1,0,0,0,298,300,5,46,0,0,299,301,2,48,57,0,
300,299,1,0,0,0,301,302,1,0,0,0,302,300,1,0,0,0,302,303,1,0,0,0,303,305,
1,0,0,0,304,298,1,0,0,0,304,305,1,0,0,0,305,328,1,0,0,0,306,307,5,48,0,0,
307,309,7,1,0,0,308,310,7,2,0,0,309,308,1,0,0,0,310,311,1,0,0,0,311,309,
1,0,0,0,311,312,1,0,0,0,312,328,1,0,0,0,313,314,5,48,0,0,314,316,7,3,0,0,
315,317,2,48,55,0,316,315,1,0,0,0,317,318,1,0,0,0,318,316,1,0,0,0,318,319,
1,0,0,0,319,328,1,0,0,0,320,321,5,48,0,0,321,323,7,4,0,0,322,324,2,48,49,
0,323,322,1,0,0,0,324,325,1,0,0,0,325,323,1,0,0,0,325,326,1,0,0,0,326,328,
1,0,0,0,327,294,1,0,0,0,327,306,1,0,0,0,327,313,1,0,0,0,327,320,1,0,0,0,
328,102,1,0,0,0,329,333,7,5,0,0,330,332,7,6,0,0,331,330,1,0,0,0,332,335,
1,0,0,0,333,331,1,0,0,0,333,334,1,0,0,0,334,104,1,0,0,0,335,333,1,0,0,0,
336,342,5,34,0,0,337,341,7,7,0,0,338,339,5,92,0,0,339,341,7,8,0,0,340,337,
1,0,0,0,340,338,1,0,0,0,341,344,1,0,0,0,342,340,1,0,0,0,342,343,1,0,0,0,
343,345,1,0,0,0,344,342,1,0,0,0,345,366,5,34,0,0,346,352,5,39,0,0,347,351,
7,7,0,0,348,349,5,92,0,0,349,351,7,8,0,0,350,347,1,0,0,0,350,348,1,0,0,0,
351,354,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,0,353,355,1,0,0,0,354,352,
1,0,0,0,355,366,5,39,0,0,356,357,5,114,0,0,357,361,5,34,0,0,358,360,9,0,
0,0,359,358,1,0,0,0,360,363,1,0,0,0,361,362,1,0,0,0,361,359,1,0,0,0,362,
364,1,0,0,0,363,361,1,0,0,0,364,366,5,34,0,0,365,336,1,0,0,0,365,346,1,0,
0,0,365,356,1,0,0,0,366,106,1,0,0,0,367,368,5,47,0,0,368,369,5,42,0,0,369,
373,1,0,0,0,370,372,9,0,0,0,371,370,1,0,0,0,372,375,1,0,0,0,373,374,1,0,
0,0,373,371,1,0,0,0,374,376,1,0,0,0,375,373,1,0,0,0,376,377,5,42,0,0,377,
378,5,47,0,0,378,379,1,0,0,0,379,380,6,53,1,0,380,108,1,0,0,0,381,382,5,
47,0,0,382,383,5,47,0,0,383,387,1,0,0,0,384,386,8,9,0,0,385,384,1,0,0,0,
386,389,1,0,0,0,387,385,1,0,0,0,387,388,1,0,0,0,388,390,1,0,0,0,389,387,
1,0,0,0,390,391,6,54,1,0,391,110,1,0,0,0,17,0,296,302,304,311,318,325,327,
333,340,342,350,352,361,365,373,387,2,6,0,0,0,1,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ScriptGrammarLexer extends antlr4.Lexer {

    static grammarFileName = "ScriptGrammar.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "';'", "'class'", "'extend'", "'{'", "'}'", 
                         "'private'", "'protected'", "'public'", "'static'", 
                         "'='", "'def'", "'('", "')'", "','", "'if'", "'else'", 
                         "'for'", "'in'", "'while'", "'return'", "'continue'", 
                         "'break'", "'!'", "'~'", "'+'", "'-'", "'*'", "'/'", 
                         "'%'", "'>='", "'<='", "'>'", "'<'", "'=='", "'!='", 
                         "'&'", "'^'", "'|'", "'&&'", "'||'", "'?'", "':'", 
                         "'new'", "'true'", "'false'", "'null'", "'['", 
                         "']'", "'.'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "WS", "NUMBER", "ID", "STRING", "BLOCK_COMMENT", 
                          "LINE_COMMENT" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "T__33", "T__34", "T__35", "T__36", 
                      "T__37", "T__38", "T__39", "T__40", "T__41", "T__42", 
                      "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
                      "WS", "NUMBER", "ID", "STRING", "BLOCK_COMMENT", "LINE_COMMENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

ScriptGrammarLexer.EOF = antlr4.Token.EOF;
ScriptGrammarLexer.T__0 = 1;
ScriptGrammarLexer.T__1 = 2;
ScriptGrammarLexer.T__2 = 3;
ScriptGrammarLexer.T__3 = 4;
ScriptGrammarLexer.T__4 = 5;
ScriptGrammarLexer.T__5 = 6;
ScriptGrammarLexer.T__6 = 7;
ScriptGrammarLexer.T__7 = 8;
ScriptGrammarLexer.T__8 = 9;
ScriptGrammarLexer.T__9 = 10;
ScriptGrammarLexer.T__10 = 11;
ScriptGrammarLexer.T__11 = 12;
ScriptGrammarLexer.T__12 = 13;
ScriptGrammarLexer.T__13 = 14;
ScriptGrammarLexer.T__14 = 15;
ScriptGrammarLexer.T__15 = 16;
ScriptGrammarLexer.T__16 = 17;
ScriptGrammarLexer.T__17 = 18;
ScriptGrammarLexer.T__18 = 19;
ScriptGrammarLexer.T__19 = 20;
ScriptGrammarLexer.T__20 = 21;
ScriptGrammarLexer.T__21 = 22;
ScriptGrammarLexer.T__22 = 23;
ScriptGrammarLexer.T__23 = 24;
ScriptGrammarLexer.T__24 = 25;
ScriptGrammarLexer.T__25 = 26;
ScriptGrammarLexer.T__26 = 27;
ScriptGrammarLexer.T__27 = 28;
ScriptGrammarLexer.T__28 = 29;
ScriptGrammarLexer.T__29 = 30;
ScriptGrammarLexer.T__30 = 31;
ScriptGrammarLexer.T__31 = 32;
ScriptGrammarLexer.T__32 = 33;
ScriptGrammarLexer.T__33 = 34;
ScriptGrammarLexer.T__34 = 35;
ScriptGrammarLexer.T__35 = 36;
ScriptGrammarLexer.T__36 = 37;
ScriptGrammarLexer.T__37 = 38;
ScriptGrammarLexer.T__38 = 39;
ScriptGrammarLexer.T__39 = 40;
ScriptGrammarLexer.T__40 = 41;
ScriptGrammarLexer.T__41 = 42;
ScriptGrammarLexer.T__42 = 43;
ScriptGrammarLexer.T__43 = 44;
ScriptGrammarLexer.T__44 = 45;
ScriptGrammarLexer.T__45 = 46;
ScriptGrammarLexer.T__46 = 47;
ScriptGrammarLexer.T__47 = 48;
ScriptGrammarLexer.T__48 = 49;
ScriptGrammarLexer.WS = 50;
ScriptGrammarLexer.NUMBER = 51;
ScriptGrammarLexer.ID = 52;
ScriptGrammarLexer.STRING = 53;
ScriptGrammarLexer.BLOCK_COMMENT = 54;
ScriptGrammarLexer.LINE_COMMENT = 55;



